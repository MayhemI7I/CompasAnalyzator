╔═══════════════════════════════════════════════════════════════╗
║       КАК ПРОГРАММА РАБОТАЕТ БЕЗ ДОПОЛНИТЕЛЬНЫХ ФАЙЛОВ       ║
╚═══════════════════════════════════════════════════════════════╝

ВАШЕ ОТЛИЧНЫЙ ВОПРОС! 🎯

"Если копируем только EXE, как он подгружает скачанные 
иконки и данные для графика?"

═══════════════════════════════════════════════════════════════

✨ МАГИЯ WAILS: ВСЁ ВСТРОЕНО В EXE!
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

В файле main_desktop.go есть строчка:

   //go:embed webui/static/*
   var assets embed.FS

ЭТО ОЗНАЧАЕТ:
   При сборке (wails build) ВСЕ файлы из webui/static/
   ВСТРАИВАЮТСЯ ПРЯМО В CompassAnalyzer.exe!

═══════════════════════════════════════════════════════════════

📦 ЧТО НАХОДИТСЯ ВНУТРИ EXE:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

CompassAnalyzer.exe (10.4 МБ) содержит:

   ✅ Go программа (backend)            ~2 МБ
   ✅ WebView2 loader                   ~1 МБ
   
   ✅ HTML/CSS/JS:
      • index.html                      ~20 КБ
      • styles.css                      ~15 КБ
      • app.js                          ~60 КБ
      • version.js                      ~1 КБ
   
   ✅ Библиотеки:
      • vendor/chart.umd.min.js         205 КБ
      • vendor/chartjs-plugin-zoom...   13 КБ
   
   ✅ Шрифты:
      • fonts/MaterialIcons-Regular... 125 КБ
      • fonts/material-icons.css        1 КБ
   
   ✅ Go Runtime                         ~7 МБ

   ИТОГО: ~10.4 МБ

ВСЁ В ОДНОМ ФАЙЛЕ! 🎊

═══════════════════════════════════════════════════════════════

🔍 КАК ЭТО РАБОТАЕТ ПРИ ЗАПУСКЕ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Вы запускаете CompassAnalyzer.exe

2. Go программа запускается и:
   • Читает встроенные файлы из переменной 'assets'
   • Создает виртуальный веб-сервер ВНУТРИ программы
   • Загружает HTML в WebView2

3. WebView2 (встроенный браузер) запрашивает:
   "Дай мне index.html"
   
4. Go отвечает:
   "Вот index.html из моей памяти!" (не с диска!)

5. Браузер запрашивает:
   "Дай мне fonts/MaterialIcons-Regular.woff2"
   
6. Go отвечает:
   "Вот шрифт из моей памяти!"

7. И так далее для всех файлов...

ВСЁ БЕРЁТСЯ ИЗ ПАМЯТИ EXE! НЕ С ДИСКА! ✨

═══════════════════════════════════════════════════════════════

📂 СТРУКТУРА ПРИ ПЕРЕНОСЕ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

НА ФЛЕШКЕ:

   E:\CompassAnalyzer\
   ├── CompassAnalyzer.exe     ⟵ ВНУТРИ: HTML, CSS, JS,
   │                              иконки, Chart.js, всё!
   └── history\                ⟵ ТОЛЬКО ИСТОРИЯ отдельно!
       └── analysis_history.json

ПОЧЕМУ ИСТОРИЯ ОТДЕЛЬНО?
   • История - это ВАШИ ДАННЫЕ (динамические)
   • Они создаются/изменяются во время работы
   • Их НЕЛЬЗЯ встроить в EXE (иначе при каждом
     новом анализе пришлось бы пересобирать программу!)

ВСЁ ОСТАЛЬНОЕ - ВСТРОЕНО! ✅

═══════════════════════════════════════════════════════════════

💡 АНАЛОГИЯ (ЧТОБЫ БЫЛО ПОНЯТНО):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

CompassAnalyzer.exe - это как ZIP архив:

   📦 CompassAnalyzer.exe
      ├── 🔧 Программа на Go (умеет распаковывать)
      └── 🗜️ Встроенный архив:
          ├── index.html
          ├── styles.css
          ├── app.js
          ├── MaterialIcons-Regular.woff2
          ├── chart.umd.min.js
          └── chartjs-plugin-zoom.min.js

При запуске:
   1. Программа "распаковывает" файлы В ПАМЯТИ
   2. Показывает их браузеру
   3. Браузер думает что это обычный сайт

НО ФАЙЛЫ НА ДИСКЕ НЕ СОЗДАЮТСЯ! ✨

═══════════════════════════════════════════════════════════════

🎯 ПОЧЕМУ ЭТО КРУТО:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Один файл - вся программа
   Не нужны папки node_modules, vendor и т.д.

✅ Быстрый запуск
   Все файлы уже в памяти

✅ Защита кода
   Нельзя "подсмотреть" или изменить файлы

✅ Портативность
   Скопировал EXE - всё работает!

✅ Работает без интернета
   Всё встроено локально

═══════════════════════════════════════════════════════════════

📊 ТЕХНИЧЕСКИЕ ДЕТАЛИ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

КОД В main_desktop.go:

   //go:embed webui/static/*
   var assets embed.FS      ⟵ ВСЕ файлы здесь!

   AssetServer: &assetserver.Options{
       Assets: assets,      ⟵ Передаем в WebView2
   }

ЧТО ПРОИСХОДИТ:
   1. При сборке (wails build):
      • Go читает все файлы из webui/static/
      • Преобразует в []byte (массив байтов)
      • Встраивает в .exe секцию

   2. При запуске:
      • Go читает []byte из своей памяти
      • Отдает WebView2 как обычные файлы

═══════════════════════════════════════════════════════════════

🔬 ПРОВЕРКА (ЕСЛИ НЕ ВЕРИТЕ):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Скопируйте ТОЛЬКО CompassAnalyzer.exe на флешку
   (БЕЗ папки history)

2. Запустите программу

3. Откройте консоль (F12)

4. Вы увидите:
   • Красивый интерфейс ✅
   • Иконки на кнопках ✅
   • График работает ✅
   • Зум работает ✅

5. ТОЛЬКО история будет пустая!
   (потому что папки history\ нет)

ЭТО ДОКАЗЫВАЕТ:
   Всё встроено в EXE! Работает без дополнительных файлов!

═══════════════════════════════════════════════════════════════

📋 КРАТКИЙ ОТВЕТ НА ВАШ ВОПРОС:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

"Как EXE подгружает скачанные иконки и график?"

ОТВЕТ:
   Они ВСТРОЕНЫ В EXE при сборке!
   Используется Go directive: //go:embed
   
   При запуске программа читает их ИЗ СЕБЯ (из памяти),
   а не с диска!

ПОЭТОМУ:
   ✅ Скопировали EXE → ВСЁ работает!
   ✅ Иконки есть → они ВНУТРИ EXE
   ✅ График есть → Chart.js ВНУТРИ EXE
   ✅ Зум есть → плагин ВНУТРИ EXE

ОТДЕЛЬНО ТОЛЬКО:
   📁 history\ - ваши данные анализов

═══════════════════════════════════════════════════════════════

🎊 ИТОГ:

CompassAnalyzer.exe = 
   Программа + HTML + CSS + JS + Иконки + Chart.js + Всё!

Один файл - вся мощь! 💪

ВОТ ПОЧЕМУ WAILS ТАК КРУТ! 🚀

